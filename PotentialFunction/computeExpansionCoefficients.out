Mathematica 13.1.0 Kernel for Linux x86 (64-bit)
Copyright 1988-2022 Wolfram Research, Inc.

In[1]:= 
In[2]:=                 
In[3]:= 
In[4]:= 
In[5]:= 
In[6]:= 
In[7]:= 
In[8]:= 
In[9]:= 
In[10]:= In[10]:= 
In[11]:= 
In[12]:= 
In[13]:= 
In[14]:= 
In[15]:= 
In[16]:= 
In[17]:= 
In[18]:= 
In[19]:= 
In[20]:= 
In[21]:= 
In[22]:= 
In[23]:= 
In[24]:= 
In[25]:= 
In[26]:=                            
In[27]:= 
In[28]:= 
In[29]:= 
In[30]:= 
In[31]:= In[31]:= 
In[32]:= 
In[33]:= 
In[34]:= 
In[35]:= 
In[36]:= Second order coefficients

In[37]:= {{f      , f      , f      , f      , f      , f      }, 
   200000   110000   101000   100100   100010   100001
 
>   {f      , f      , f      , f      , f      , f      }, 
      110000   020000   011000   010100   010010   010001
 
>   {f      , f      , f      , f      , f      , f      }, 
      101000   011000   002000   001100   001010   001001
 
>   {f      , f      , f      , f      , f      , f      }, 
      100100   010100   001100   000200   000110   000101
 
>   {f      , f      , f      , f      , f      , f      }, 
      100010   010010   001010   000110   000020   000011
 
>   {f      , f      , f      , f      , f      , f      }}
      100001   010001   001001   000101   000011   000002

In[38]:= {f      , f      , f      , f      , f      , f      , f      , f      , 
  200000   110000   101000   100100   100010   100001   020000   011000
 
>   f      , f      , f      , f      , f      , f      , f      , f      , 
     010100   010010   010001   002000   001100   001010   001001   000200
 
>   f      , f      , f      , f      , f      }
     000110   000101   000020   000011   000002

In[39]:= 110000

In[40]:= 
In[41]:= 
In[42]:= 
In[43]:= 
In[44]:= 
In[45]:= 
In[46]:= In[46]:= 
Syntax::sntxf: "         If[k =" cannot be followed by 
    "/= 4, If[k =/= 5, If[powers[[k]] > 0, multiMode = multiMode + 1,],],];".

In[46]:= 
In[47]:= 
In[48]:= 
In[49]:= Third order coefficients

In[50]:= 
Delete::partw: Part {1} of {} does not exist.

In[51]:= {{{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, 
 
>    {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}}, 
 
>   {{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, 
 
>    {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}}, 
 
>   {{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, 
 
>    {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}}, 
 
>   {{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, 
 
>    {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}}, 
 
>   {{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, 
 
>    {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}}, 
 
>   {{0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, 
 
>    {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}}}

In[52]:= Delete[{}, 1]

In[53]:= 
Part::partd: Part specification 1[[2]] is longer than depth of object.
1[[2]]

In[54]:= 
In[55]:= 
In[56]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {1 + maxFourierMode, 6, 6, 6, 6}].

In[57]:= 
In[58]:= 
In[59]:= 
In[60]:= In[60]:= 
Delete::argt: Delete called with 3 arguments; 1 or 2 arguments are expected.

Delete::argt: Delete called with 4 arguments; 1 or 2 arguments are expected.

Delete::argt: Delete called with 5 arguments; 1 or 2 arguments are expected.

General::stop: Further output of Delete::argt
     will be suppressed during this calculation.

In[61]:= 
In[62]:= 
In[63]:= 
In[64]:= 
In[65]:= 
In[66]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {1 + maxFourierMode, 6, 6, 6, 6, 6}].

In[67]:= 
In[68]:= 
In[69]:= 
In[70]:= In[70]:= 
In[71]:= 
In[72]:= 
In[73]:= 
In[74]:= 
In[75]:= 
In[76]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {1 + maxFourierMode, 6, 6, 6, 6, 6, 6}].

In[77]:= 
In[78]:= 
In[79]:= 
In[80]:= Defining 6th order coefficients....

In[81]:= 
In[82]:= 
In[83]:= 
In[84]:= 
In[85]:= 
In[86]:= 
In[87]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {3, 1 + maxFourierMode}].

In[88]:= 
In[89]:= 
In[90]:= 
In[91]:= 
In[92]:= 
Out[92]= {}

In[93]:= Printing 0th order solutions...

In[94]:= 
Part::partw: Part 1 of {} does not exist.

Part::partw: Part 1 of {} does not exist.

Part::partw: Part 1 of {} does not exist.

General::stop: Further output of Part::partw
     will be suppressed during this calculation.

In[95]:= 
In[96]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {3, 1 + maxFourierMode, 6}].

In[97]:= 
In[98]:= 
In[99]:= 
In[100]:= 
In[101]:= 
In[102]:= 
Out[102]= {}

In[103]:= 
In[104]:= 
In[105]:= Printing 1st order solutions...

In[106]:= 
Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partw: Part 1 of {} does not exist.

General::stop: Further output of Part::partw
     will be suppressed during this calculation.

Part::partd: Part specification List[[1]] is longer than depth of object.

General::stop: Further output of Part::partd
     will be suppressed during this calculation.

In[107]:= 
In[108]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {3, 1 + maxFourierMode, 6, 6}].

In[109]:= 
In[110]:= 
In[111]:= 
In[112]:= 
In[113]:= 
In[114]:= 
In[115]:= 
Out[115]= {}

In[116]:= Printing 2rd order solutions...

In[117]:= 
Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

General::stop: Further output of Part::partd
     will be suppressed during this calculation.

Part::partw: Part 1 of {} does not exist.

General::stop: Further output of Part::partw
     will be suppressed during this calculation.

In[118]:= 
In[119]:= Applying symmetry operations to 3rd order coefficients...

In[120]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {3, 1 + maxFourierMode, 6, 6, 6}].

In[121]:= 
In[122]:= Done!

In[123]:= Solving 3rd order equations...

In[124]:= 
In[125]:= 
In[126]:= 
In[127]:= Done!

In[128]:= 
Out[128]= {}

In[129]:= Printing 3rd order solutions...

In[130]:= 
Syntax::com: Warning: comma encountered with no adjacent expression. The
     expression will be treated as Null. .


Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification Delete[[1]] is longer than depth of object.

General::stop: Further output of Part::partd
     will be suppressed during this calculation.

Part::partw: Part 1 of {} does not exist.

Part::partw: Part 1 of {} does not exist.

General::stop: Further output of Part::partw
     will be suppressed during this calculation.

In[131]:= 
In[132]:= Applying symmetry operations to 4th order coefficients...

In[133]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {3, 1 + maxFourierMode, 6, 6, 6, 6}].

In[134]:= 
In[135]:= Done!

In[136]:= Solving 4th order equations...

In[137]:= 
In[138]:= 
In[139]:= 
In[140]:= Done!

In[141]:= 
Out[141]= {{ConstantArray[0, {3, 1 + maxFourierMode, 6, 6, 6, 6}] -> 0}}

In[142]:= Printing 4th order solutions...

In[143]:= 
In[144]:= 
Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification Delete[[1]] is longer than depth of object.

General::stop: Further output of Part::partd
     will be suppressed during this calculation.

Part::partw: Part 1 of {} does not exist.

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {1, 1}].

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {2, 2}].

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {3, 3}].

General::stop: Further output of StringTake::strse
     will be suppressed during this calculation.
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]

Part::partw: Part 1 of {} does not exist.

General::stop: Further output of Part::partw
     will be suppressed during this calculation.
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]

In[145]:= 
In[146]:= Applying symmetry operations to 5th order coefficients...

In[147]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {3, 1 + maxFourierMode, 6, 6, 6, 6, 6}].

In[148]:= 
In[149]:= Done!

In[150]:= Solving 5th order equations...

In[151]:= 
In[152]:= 
In[153]:= 
In[154]:= Done!

In[155]:= 
Out[155]= {{ConstantArray[0, {3, 1 + maxFourierMode, 6, 6, 6, 6, 6}] -> 0}}

In[156]:= Printing 5th order solutions...

In[157]:= 
In[158]:= 
Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification Delete[[1]] is longer than depth of object.

General::stop: Further output of Part::partd
     will be suppressed during this calculation.

Part::partw: Part 1 of {} does not exist.

ToExpression::notstrbox: 
   Characters[List[[2]]] is not a string or a box. ToExpression can only
     interpret strings or boxes as Wolfram Language input.

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {1, 1}].

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {2, 2}].

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {3, 3}].

General::stop: Further output of StringTake::strse
     will be suppressed during this calculation.
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]

ToExpression::notstrbox: 
   Characters[List[[2]]] is not a string or a box. ToExpression can only
     interpret strings or boxes as Wolfram Language input.
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]

ToExpression::notstrbox: 
   Characters[List[[2]]] is not a string or a box. ToExpression can only
     interpret strings or boxes as Wolfram Language input.

General::stop: Further output of ToExpression::notstrbox
     will be suppressed during this calculation.
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]

Part::partw: Part 1 of {} does not exist.

General::stop: Further output of Part::partw
     will be suppressed during this calculation.
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]

In[159]:= 
In[160]:= Applying symmetry operations to 6th order coefficients...

In[161]:= 
ConstantArray::ilsmn: 
   Single or list of non-negative machine-sized integers expected at position 
    2 of ConstantArray[0, {3, 1 + maxFourierMode, 6, 6, 6, 6, 6, 6}].

In[162]:= 
In[163]:= Done!

In[164]:= Solving 6th order equations...

In[165]:= 
In[166]:= 
In[167]:= 
In[168]:= Done!

In[169]:= 
Out[169]= {{ConstantArray[0, {3, 1 + maxFourierMode, 6, 6, 6, 6, 6, 6}] -> 0}}

In[170]:= Printing 6th order solutions...

In[171]:= 
In[172]:= 
Part::partw: Part 1 of {} does not exist.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification List[[1]] is longer than depth of object.

Part::partd: Part specification Delete[[1]] is longer than depth of object.

General::stop: Further output of Part::partd
     will be suppressed during this calculation.

Part::partw: Part 1 of {} does not exist.

ToExpression::notstrbox: 
   Characters[List[[2]]] is not a string or a box. ToExpression can only
     interpret strings or boxes as Wolfram Language input.

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {1, 1}].

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {2, 2}].

StringTake::strse: 
   String or list of strings expected at position 1 in 
    StringTake[List[[2]], {3, 3}].

General::stop: Further output of StringTake::strse
     will be suppressed during this calculation.
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]

ToExpression::notstrbox: 
   Characters[List[[2]]] is not a string or a box. ToExpression can only
     interpret strings or boxes as Wolfram Language input.
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]

ToExpression::notstrbox: 
   Characters[List[[2]]] is not a string or a box. ToExpression can only
     interpret strings or boxes as Wolfram Language input.

General::stop: Further output of ToExpression::notstrbox
     will be suppressed during this calculation.
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  List[[3]]

Part::partw: Part 1 of {} does not exist.

General::stop: Further output of Part::partw
     will be suppressed during this calculation.
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  3 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  6 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  9 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   12 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   15 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   18 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 2 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   0 2 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   1 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   2 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 1 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   0 1 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   1 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]
* List[[1]]   0 0 StringTake[List[[2]], {1, 1}] StringTake[List[[2]], {2, 2}] 
 
>   StringTake[List[[2]], {3, 3}] 0 StringTake[List[[2]], {4, 4}] 
 
>   StringTake[List[[2]], {5, 5}] StringTake[List[[2]], {6, 6}] 
 
>   StringTake[List[[2]], {7, 7}] StringTake[List[[2]], {8, 8}]  
 
>   21 + List[[3]]

In[173]:= 
